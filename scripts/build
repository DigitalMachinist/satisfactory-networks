#!/bin/bash

###################################################################################################
# build
#
# Compile the app, libraries and EEPROM files for the given app and update all drives that the app
# is applied to with the latest build of the code files.
#
# This will overwrite code files for all drives the app is applied to. Additionally, the eeprom.lua
# template taken from the root folder of the project will automatically have the drive's UUID set
# as the primary drive alias to make it bootable as the app code.
###################################################################################################

SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "$SCRIPT_PATH/../config"

# This is the string to find and replace in eeprom.lua with each drive's UUID.
UUID_REPLACE="__DRIVE_UUID__"

if [ -z "$1" ]; then
    important "Argument 'template' is required!\nUsage: $0 <app_name>\n";
    exit 1
fi

APP_PATH="$APPS_PATH/$APP"
printf "Building drives from template ${GREEN}$APP${NC}:\n"
printf "  ╰──▶ ${GREEN}$APP_PATH${NC}\n\n"

# Find all drives the app is applied to and update their files from the current app, library & EEPROM files.
APP=$1
cd "$APP_DRIVES_PATH/$APP"
DRIVES="$( find . -mindepth 1 -maxdepth 1 | sort -u | cut -c3-34 )"
for DRIVE in $DRIVES
do
    printf "Building app ${GREEN}$APP${NC} to drive ${RED}$DRIVE${NC}!\n"

    # Copy all app and common files into the drive, preserving files/folders that need to remain unchanged.
    find "./$DRIVE" -mindepth 1 \( ! -path "*/data*" ! -path "*/env_config.lua" ! -path "*/README.md" ! -path "*/.template" \) -delete # Delete all but the data folder, env_config.lua and README.md.
    DRIVE_PATH="$DRIVES_PATH/$DRIVE"
    cp $APP_PATH/* "$DRIVE_PATH" >/dev/null 2>&1 # Copy all files from the top-level app folder (non-recursive). MUST HAVE NO QUOTES ON SRC PATH!
    cp -rf --no-clobber "$APP_PATH/data" "$DRIVE_PATH" # Copy files from the data folder but *DO NOT OVERWRITE THE DESTINATION*.
    cp -rf "$APP_PATH/src" "$DRIVE_PATH"
    cp -rf "$APP_PATH/tags" "$DRIVE_PATH"
    cp -rf "$LIBS_PATH" "$DRIVE_PATH"
    cp "$EEPROM_PATH" "$DRIVE_PATH"

    # Create these files from templates if they're missing, but if they exist don't change them.
    cp -f --no-clobber "$FIN_SDK_PATH/.sdk/templates/env_config.lua" "$DRIVE_PATH/env_config.lua"
    cp -f --no-clobber "$FIN_SDK_PATH/.sdk/templates/README.lua" "$DRIVE_PATH/README.md"

    # Find and replace the drive UUID in the EEPROM file to make it bootable EEPROM code.
    sed -i s/$UUID_REPLACE/$DRIVE/ "$DRIVE_PATH/eeprom.lua"
done

cd $PWD

important "\nDone!\n"

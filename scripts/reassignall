#!/bin/bash

###################################################################################################
# reassignall
#
# Updates the /assigned_drives folder by checking the assigned template of all drives and placing
# each one into the appropriate template folder.
#
# This script is useful if your /assigned_drives folder gets deleted or modified somehow and you
# just need to fix it for all drives. It also automatically runs after each `pull` to sort any
# newly discovered drives into /assigned_drives/unassigned by default.
###################################################################################################

SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "$SCRIPT_PATH/../scripts_config"

DRIVES_PATH="$FIN_SDK_PATH/drives"
ASSIGNED_DRIVES_PATH="$FIN_SDK_PATH/assigned_drives"

# Delete /assigned_drives and remake it. This removes the symlinks, but the actual files remain.
rm -rf "$ASSIGNED_DRIVES_PATH"
mkdir "$ASSIGNED_DRIVES_PATH"

# While changing to the /drives folder, get the path to use for Windows symlinking.
cd "$DRIVES_PATH"
WIN_DRIVES_PATH=$( cmdpwd )

# Reassign each drive based on its .template file to rebuild the assigned_drives symlink folder.
DRIVES="$( find . -mindepth 1 -maxdepth 1 -type d | sort -u | cut -c3-34 )"
for DRIVE in $DRIVES
do
    if [ -f "$DRIVES_PATH/$DRIVE/.template" ]; then
        TEMPLATE=$( cat "$DRIVES_PATH/$DRIVE/.template" )
    else
        TEMPLATE="unassigned"
    fi

    if [ ! -d "$ASSIGNED_DRIVES_PATH/$TEMPLATE" ]; then
        mkdir "$ASSIGNED_DRIVES_PATH/$TEMPLATE"
    fi

    # Symlink the drive into the /assigned_drives subfolder for its template. This makes it so that any
    # changes to the copy under /assigned_drives is automatically reflected in the copy under /drives.
    if [ "$SYMLINK_FOR_WINDOWS" -eq 1 ]; then
        # Use Windows symlinking if requested.
        cmdrun mklink /D "$WIN_DRIVES_PATH\\..\\assigned_drives\\$TEMPLATE\\$DRIVE" "$WIN_DRIVES_PATH\\$DRIVE" >/dev/null 2>&1
    else
        # Otherwise, use *nix symlinking instead.
        ln -sf "$DRIVES_PATH/$DRIVE" "$ASSIGNED_DRIVES_PATH/$TEMPLATE/$DRIVE"
    fi

    if [ "$TEMPLATE" = "unassigned" ]; then
        printf "Drive ${RED}$DRIVE${NC} unassigned.\n"
    else
        "$FIN_SDK_PATH/scripts/tag $TEMPLATE $DRIVE" >/dev/null 2>&1
        printf "Assigned drive ${RED}$DRIVE${NC} to template ${GREEN}$TEMPLATE${NC}.\n"
    fi
done
printf "\n"

cd $PWD

echo "Done!"

#!/bin/bash

GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

cmd() {
    CMD=$1
    shift;
    ARGS=$@
    WIN_PWD=`wslpath -w "$(pwd)"`
    cmd.exe /c "pushd ${WIN_PWD} && ${CMD} ${ARGS}"
}

WIN_SCRIPT_DIR=$( wslpath -w "$(pwd)" )
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [ -z "$2" ]; then
    echo "Missing arguments!"
    echo "Usage: ./assign <template> <drive_uuid> [<drive_uuid>]...";
    exit 1
fi

ASSIGNED_PATH="$SCRIPT_DIR/../assigned_drives"
if [ ! -d "$ASSIGNED_PATH" ]; then
    mkdir "$ASSIGNED_PATH"
fi
if [ ! -d "$ASSIGNED_PATH/$1" ]; then
    mkdir "$ASSIGNED_PATH/$1"
fi

for DRIVE in "${@:2}"
do
    # If this drive was previously assigned to another template, unlink it from that.
    if [ -f "$ASSIGNED_PATH/$1/$DRIVE/.template" ]; then
        TEMPLATE=$( cat "$ASSIGNED_PATH/$1/$DRIVE/.template" )
        rm "$ASSIGNED_PATH/$TEMPLATE/$DRIVE"
    fi
    
    # Create the tag file on the drive and symlink folder the drive into the appropriate template.
    echo $1 > "$SCRIPT_DIR/../drives/$DRIVE/.template"
    WIN_DRIVE_PATH="$WIN_SCRIPT_DIR/../drives/$DRIVE"
    cmd mklink /D "$WIN_SCRIPT_DIR\\..\\assigned_drives\\$1\\$DRIVE" "$WIN_SCRIPT_DIR\\..\\drives\\$DRIVE" > /dev/null 2>&1
    # I don't do this because my editor is running under my Windows filesystem, so I needs a Windows symlink.
    # ln -sf "$SCRIPT_DIR/../drives/$DRIVE" "$ASSIGNED_PATH/$1/$DRIVE"
    
    printf "Assigned drive ${RED}$DRIVE${NC} to template ${GREEN}$1${NC}.\n"
done

echo "Done!"
#!/bin/bash

###################################################################################################
# assign
#
# Assign one or more drives to a template, symlinking them into /assigned_drives/<template>.
###################################################################################################

SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "$SCRIPT_PATH/../scripts_config"

if [ -z "$2" ]; then
    echo "Missing arguments!"
    echo "Usage: $0 <template> <drive> [<drive>]...";
    exit 1
fi

DRIVES_PATH="$FIN_SDK_PATH/drives"
ASSIGNED_DRIVES_PATH="$FIN_SDK_PATH/assigned_drives"
if [ ! -d "$ASSIGNED_DRIVES_PATH" ]; then
    mkdir "$ASSIGNED_DRIVES_PATH"
fi
if [ ! -d "$ASSIGNED_DRIVES_PATH/$1" ]; then
    mkdir "$ASSIGNED_DRIVES_PATH/$1"
fi

# While changing to the /drives folder, get the path to use for Windows symlinking.
cd "$DRIVES_PATH"
WIN_DRIVES_PATH=$( cmdpwd )

for DRIVE in "${@:2}"
do
    # If this drive was previously assigned to another template, unlink it from that.
    if [ -f "$ASSIGNED_DRIVES_PATH/$1/$DRIVE/.template" ]; then
        TEMPLATE=$( cat "$ASSIGNED_DRIVES_PATH/$1/$DRIVE/.template" )
        rm "$ASSIGNED_DRIVES_PATH/$TEMPLATE/$DRIVE"
    fi
    
    # Create the .template file on the drive to store the template it is assigned to.
    echo $1 > "$DRIVES_PATH/$DRIVE/.template"
    "$FIN_SDK_PATH/scripts/tag $1 $DRIVE" >/dev/null 2>&1

    # Symlink the drive into the /assigned_drives subfolder for its template. This makes it so that any
    # changes to the copy under /assigned_drives is automatically reflected in the copy under /drives.
    if [ "$SYMLINK_FOR_WINDOWS" -eq 1 ]; then
        # Use Windows symlinking if requested.
        cmdrun mklink /D "$WIN_DRIVES_PATH\\..\\assigned_drives\\$1\\$DRIVE" "$WIN_DRIVES_PATH\\$DRIVE" >/dev/null 2>&1
    else
        # Otherwise, use *nix symlinking instead.
        ln -sf "$DRIVES_PATH/$DRIVE" "$ASSIGNED_DRIVES_PATH/$1/$DRIVE"
    fi
    
    printf "Assigned drive ${RED}$DRIVE${NC} to template ${GREEN}$1${NC}.\n"
done

cd $PWD

printf "\nDone!\n"
